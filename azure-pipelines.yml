trigger:
- main

variables:
  - group: AWS-Credentials
  - name: tf.version
    value: '1.12.2'
  - name: aws.region
    value: 'us-east-1'
  - name: environment
    value: 'dev'
  - name: tf.root.dir
    value: 'role-terraform-03-06-25/environments/dev'
  - name: tf.vars.file
    value: 'dev.tfvars'
  - name: tf.plan.file
    value: '$(Build.SourcesDirectory)/$(tf.root.dir)/tfplan.out'

pool: Default

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: Plan
    displayName: 'Generate Terraform Plan'
    steps:
    - checkout: self
      displayName: 'Checkout repository'
      submodules: recursive
      path: 's'  # This ensures consistent path structure
    
    - task: TerraformInstaller@0
      displayName: 'Install Terraform $(tf.version)'
      inputs:
        terraformVersion: $(tf.version)
    
    - bash: |
        echo "##vso[task.setvariable variable=AWS_ACCESS_KEY_ID]$(AWS_ACCESS_KEY_ID)"
        echo "##vso[task.setvariable variable=AWS_SECRET_ACCESS_KEY]$(AWS_SECRET_ACCESS_KEY)"
        echo "##vso[task.setvariable variable=AWS_DEFAULT_REGION]$(aws.region)"
      displayName: 'Set AWS Credentials'
    
    - task: TerraformCLI@0
      displayName: 'Terraform Init'
      inputs:
        command: 'init'
        workingDirectory: '$(Build.SourcesDirectory)/$(tf.root.dir)'
        commandOptions: '-upgrade -reconfigure'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_DEFAULT_REGION: $(aws.region)
    
    - task: TerraformCLI@0
      displayName: 'Terraform Plan'
      inputs:
        command: 'plan'
        workingDirectory: '$(Build.SourcesDirectory)/$(tf.root.dir)'
        commandOptions: '-out=$(tf.plan.file) -var-file=$(tf.vars.file)'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_DEFAULT_REGION: $(aws.region)
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Plan Artifact'
      inputs:
        PathtoPublish: '$(tf.plan.file)'
        ArtifactName: 'tfplan'
        publishLocation: 'Container'

- stage: Apply
  displayName: 'Terraform Apply'
  dependsOn: Plan
  jobs:
  - job: Apply
    displayName: 'Apply Terraform Changes'
    steps:
    - checkout: self
      displayName: 'Checkout repository'
      submodules: recursive
      path: 's'  # Consistent with Plan stage
    
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: $(tf.version)
    
    - bash: |
        echo "##vso[task.setvariable variable=AWS_ACCESS_KEY_ID]$(AWS_ACCESS_KEY_ID)"
        echo "##vso[task.setvariable variable=AWS_SECRET_ACCESS_KEY]$(AWS_SECRET_ACCESS_KEY)"
        echo "##vso[task.setvariable variable=AWS_DEFAULT_REGION]$(aws.region)"
      displayName: 'Set AWS Credentials'
    
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Plan Artifact'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'tfplan'
        downloadPath: '$(Build.SourcesDirectory)/$(tf.root.dir)'
    
    - bash: |
        echo "Verifying plan file exists..."
        ls -la $(Build.SourcesDirectory)/$(tf.root.dir)
        ls -la $(Build.SourcesDirectory)/$(tf.root.dir)/tfplan.out
      displayName: 'Verify Plan File'
    
    - task: TerraformCLI@0
      displayName: 'Terraform Apply'
      inputs:
        command: 'apply'
        workingDirectory: '$(Build.SourcesDirectory)/$(tf.root.dir)'
        commandOptions: '-auto-approve $(Build.SourcesDirectory)/$(tf.root.dir)/tfplan.out'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_DEFAULT_REGION: $(aws.region)