trigger:
- none  # Run only when manually triggered

variables:
- group: AWS-Credentials  # Secure AWS credentials
- name: terraformVersion
  value: '1.6.0'
- name: environment
  value: 'dev'

stages:
- stage: TerraformPlan
  displayName: Terraform Init and Plan
  jobs:
  - job: plan
    displayName: Terraform Plan
    pool:
      name: Default  # ‚úÖ Self-hosted agent pool
    steps:
    - checkout: self

    - script: |
        echo "üîç Checking structure before plan"
        pwd
        ls -la
        ls -la role-terraform-03-06-25/environments/$(environment)
      displayName: "DEBUG: Show Folder Structure"

    - script: |
        echo "‚¨áÔ∏è Installing Terraform..."
        sudo apt-get update && sudo apt-get install -y unzip curl
        curl -o terraform.zip https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: "Install Terraform CLI"

    - script: |
        cd role-terraform-03-06-25/environments/$(environment)
        terraform init
      displayName: "Terraform Init"

    - script: |
        cd role-terraform-03-06-25/environments/$(environment)
        terraform plan -var-file="dev.tfvars" -out=tfplan
      displayName: "Terraform Plan"

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'role-terraform-03-06-25/environments/$(environment)/tfplan'
        ArtifactName: 'terraformPlan'
      displayName: "Publish Terraform Plan"

- stage: TerraformApply
  displayName: Terraform Apply
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
  - deployment: apply
    displayName: Apply Terraform Plan
    environment: dev  # Must match Azure DevOps environment name
    strategy:
      runOnce:
        deploy:
          pool:
            name: Default  # ‚úÖ Self-hosted agent again
          steps:
          - checkout: self

          - script: echo "‚úÖ Starting Apply Stage..."
            displayName: "Start Apply"

          - script: |
              echo "‚¨áÔ∏è Installing Terraform..."
              sudo apt-get update && sudo apt-get install -y unzip curl
              curl -o terraform.zip https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
              unzip terraform.zip
              sudo mv terraform /usr/local/bin/
              terraform -version
            displayName: "Install Terraform CLI"

          - download: current
            artifact: terraformPlan
            displayName: "Download Terraform Plan Artifact"

          - script: |
              echo "üîç Validating downloaded plan file..."
              cd role-terraform-03-06-25/environments/$(environment)
              ls -la
              if [ ! -f "tfplan" ]; then
                echo "‚ùå tfplan file not found!"
                exit 1
              fi
            displayName: "DEBUG: Check tfplan File"

          - script: |
              cd role-terraform-03-06-25/environments/$(environment)
              terraform init
              terraform apply tfplan
            displayName: "Terraform Apply"
