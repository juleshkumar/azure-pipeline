trigger:
- none

variables:
- group: AWS-Credentials

- name: terraformVersion
  value: '1.6.0'

- name: environment
  value: 'dev'

stages:
- stage: TerraformPlan
  displayName: Terraform Init and Plan
  jobs:
  - job: plan
    displayName: Terraform Plan
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - script: |
        sudo apt-get update && sudo apt-get install -y unzip
        curl -o terraform.zip https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: "Install Terraform"

    - script: |
        cd environments/$(environment)
        terraform init
      displayName: "Terraform Init"

    - script: |
        cd environments/$(environment)
        terraform plan -var-file="dev.tfvars" -out=tfplan
      displayName: "Terraform Plan"

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'environments/$(environment)/tfplan'
        ArtifactName: 'terraformPlan'
      displayName: "Publish Terraform Plan"

- stage: TerraformApply
  displayName: Terraform Apply
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
  - deployment: apply
    displayName: Apply Terraform Plan
    environment: dev  # ðŸ‘ˆ this triggers approval
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - script: |
              cd environments/$(environment)
              terraform init
            displayName: "Terraform Init Again"

          - download: current
            artifact: terraformPlan

          - script: |
              cd environments/$(environment)
              terraform apply tfplan
            displayName: "Terraform Apply"
